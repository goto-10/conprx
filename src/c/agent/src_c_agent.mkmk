# Copyright 2014 the Neutrino authors (see AUTHORS).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

def build_object(filename):
  source_file = c.get_source_file(filename)
  source_file.add_include(get_root().get_child("src", "c"))
  source_file.add_include(get_dep('tclib').get_child("src", "c"))
  source_file.add_include(get_dep('plankton').get_child("src", "c"))
  return source_file.get_object()

agent_files = [
  "agent.cc",
  "binpatch.cc",
  "conapi.cc",
]

utils = get_external("src", "c", "utils", "objects")
disass = get_external("src", "c", "disass", "objects")

objects = get_group("objects")
objects.add_member(get_dep_external("plankton", "src", "c", "library"))

for filename in agent_files:
  objects.add_member(build_object(filename))

agent = c.get_shared_library("agent")
agent.add_object(objects)
agent.add_object(utils)
agent.add_object(disass)

host_files = [
  "host.cc",
  "launch.cc",
]

host = c.get_executable("host")
host.add_object(utils)
host.add_object(disass)
for filename in host_files:
  host.add_object(build_object(filename))

all = get_group("all")
all.add_dependency(objects)
all.add_dependency(host)
all.add_dependency(agent)
